name: Trivy Scan
description: Action to scan an image for vulnerabilities

# inputs:
#   imageid:
#     required: true
#     description: Image ID of docker image to scan (imageid output from docker/build-push-action)
#   trivyignores:
#     required: false
#     description: "comma-separated list of relative paths in repository to one or
#       more .trivyignore files. `.trivyignore` is used if this is left blank.
#       See https://github.com/aquasecurity/trivy-action for more information."
#     default: ""
#   ignore_policy:
#     required: false
#     description: Path of trivy ignore policy file
#     default: ""
#   skip-dirs:
#     description: 'comma separated list of directories where traversal is skipped'
#     required: false
#     default: ''
#   skip-files:
#     description: 'comma separated list of files to be skipped'
#     required: false
#     default: ''
#   skip-fs-scan:
#     description: 'skip file system scan'
#     required: false
#     default: 'false'
#   low-med-scan:
#     description: 'scan for low and medium vulnerabilities'
#     required: false
#     default: 'false'
#   ignore_unfixed:
#     description: 'ignore unfixed vulnerabilities'
#     required: false
#     type: boolean
#     default: true
  # fail_on_low_medium:
  #   description: 'fail on low/medium/unknown vulnerabilities '
  #   required: false
  #   type: boolean
  #   default: false
# outputs:
#   vulnerability_count_low:
#     description: number of low vulnerabilities found during trivy scan
#     value: ${{ steps.trivy-scan-count.outputs.vulnerability_count_low }}

#   vulnerability_count_medium:
#     description: number of medium vulnerabilites found during trivy scan
#     value: ${{ steps.trivy-scan-count.outputs.vulnerability_count_medium }}

#   vulnerability_count_unknown:
#     description: number of unknown vulnerabilites found during trivy scan
#     value: ${{ steps.trivy-scan-count.outputs.vulnerability_count_unknown }}

#   vulnerability_count_ignored:
#     description: number of vulnerabilities ignored during trivy scan
#     value: ${{ steps.trivy-scan-count.outputs.vulnerability_count_ignored }}

#   unsupported_os:
#     description: 1 if trivy encounters an unsupported os. Mainly used for testing.
#     value: ${{ steps.trivy-scan-count.outputs.unsupported_os }}



runs:
  using: "composite"
  steps:
    # - name: Trivy FS Scan
    #   # if: ${{ inputs.skip-fs-scan == 'false' }}
    #   uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca
    #   with:
    #     scan-type: 'fs'
    #     scan-ref: '.'
    #     severity: 'CRITICAL,HIGH'
    #     format: 'table'
    #     ignore-unfixed: true
    #     exit-code: '1'
    #     # ignore-policy: ${{ inputs.ignore_policy }}
    #     # trivyignores: ${{ inputs.trivyignores }}
    #     # skip-dirs: ${{ inputs.skip-dirs }}
    #     # skip-files: ${{ inputs.skip-files }}

    # - name: Trivy Image Scan
    #   uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca
    #   with:
    #     image-ref: nginx:latest
    #     scan-type: 'image'
    #     ignore-unfixed: false
    #     exit-code: '1'
    #     severity: 'CRITICAL,HIGH'
    #     format: 'table'
        # ignore-policy: ${{ inputs.ignore_policy }}
        # trivyignores: ${{ inputs.trivyignores }}
        # skip-dirs: ${{ inputs.skip-dirs }}
        # skip-files: ${{ inputs.skip-files }}
    
    - name: Trivy Low/Medium/unknown severity Image Scan
      # if: ${{ inputs.low-med-scan == 'true' }}
      uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca
      with:
        image-ref: nginx:latest
        scan-type: 'image'
        ignore-unfixed: true
        exit-code: '1'
        severity: 'UNKNOWN,LOW,MEDIUM'
        format: 'table'
        # ignore-policy: ${{ inputs.ignore_policy }}
        # trivyignores: ${{ inputs.trivyignores }}
        # skip-dirs: ${{ inputs.skip-dirs }}
        # skip-files: ${{ inputs.skip-files }}
        output: 'low-medium-image.log'
        run: |
          cat low-medium-image.log

    # set the input low-med-scan to true in docker-build action to run the below steps
    # - name: Trivy Low/Medium/unknown severity File system Scan
    #   # if: ${{ inputs.skip-fs-scan == 'false' }} && ${{ inputs.low-med-scan == 'true' }}
    #   uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca
    #   with:
    #     scan-type: 'fs'
    #     scan-ref: '.'
    #     severity: 'UNKNOWN,LOW,MEDIUM'
    #     format: 'table'
    #     ignore-unfixed: true
    #     exit-code: '0'
    #     # ignore-policy: ${{ inputs.ignore_policy }}
    #     # trivyignores: ${{ inputs.trivyignores }}
    #     # skip-dirs: ${{ inputs.skip-dirs }}
    #     # skip-files: ${{ inputs.skip-files }}
    #     output: 'low-medium-fs.log'

    

    # - name: get whitelist, low and medium count
    #   id: trivy-scan-count
    #   if: ${{ inputs.low-med-scan == 'true' }}
    #   shell: bash
    #   run: |
    #     set -o pipefail -o errexit -o nounset

    #     if [[ ! -s low-medium-fs.log && ! -s low-medium-image.log ]]; then
    #         echo "ERROR: Both output files from trivy were zero bytes. This generally happens if trivy"
    #         echo "encounters an unhandled error such as an unsupported OS. Exiting with an error."
    #         echo "unsupported_os=1" >> "$GITHUB_OUTPUT"
    #         exit 1
    #     fi
    #     {
    #         grep -Eo 'LOW: [0-9]+' low-medium-fs.log low-medium-image.log | awk -F ': ' '{low+=$2} END {print "vulnerability_count_low="low}'
    #         grep -Eo 'MEDIUM: [0-9]+' low-medium-fs.log low-medium-image.log | awk -F ': ' '{medium+=$2} END {print "vulnerability_count_medium="medium}'
    #         grep -Eo 'UNKNOWN: [0-9]+' low-medium-fs.log low-medium-image.log | awk -F ': ' '{unknown+=$2} END {print "vulnerability_count_unknown="unknown}'
    #         if [[ -f .trivyignore ]]; then
    #           echo "vulnerability_count_ignored=$(grep -c '^\s*CVE' .trivyignore)"
    #         else
    #           echo "vulnerability_count_ignored=0"
    #         fi
    #     }  >> "$GITHUB_OUTPUT"
