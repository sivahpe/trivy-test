name: Trivy Scan
description: Action to scan an image for vulnerabilities

outputs:
  vulnerability_count_low:
    description: number of low vulnerabilities found during trivy scan
    value: ${{ steps.trivy-scan-count.outputs.vulnerability_count_low }}

  vulnerability_count_medium:
    description: number of medium vulnerabilites found during trivy scan
    value: ${{ steps.trivy-scan-count.outputs.vulnerability_count_medium }}

  vulnerability_count_unknown:
    description: number of unknown vulnerabilites found during trivy scan
    value: ${{ steps.trivy-scan-count.outputs.vulnerability_count_unknown }}

  vulnerability_count_ignored:
    description: number of vulnerabilities ignored during trivy scan
    value: ${{ steps.trivy-scan-count.outputs.vulnerability_count_ignored }}





runs:
  using: "composite"
  steps:
    - name: Trivy Low/Medium/unknown severity Image Scan
      uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca
      with:
        image-ref: no-vulns
        scan-type: 'image'
        severity: 'LOW,MEDIUM,UNKNOWN'
        format: 'table'
        output: 'low-medium-image.log'

    - name: get whitelist, low and medium count
      id: trivy-scan-count
      shell: bash
      run: |
        set -o pipefail -o errexit -o nounset
        if [[ ! -s low-medium-image.log ]]; then
            echo "ERROR: Both output files from trivy were zero bytes. This generally happens if trivy"
            echo "encounters an unhandled error such as an unsupported OS. Exiting with an error."
            echo "unsupported_os=1" >> "$GITHUB_OUTPUT"
            exit 1
        fi
        grep -Eo 'LOW: [0-9]+' low-medium-image.log | awk -F ': ' '{low+=$2} END {print "vulnerability_count_low="low}' >> "$GITHUB_OUTPUT"
        grep -Eo 'MEDIUM: [0-9]+' low-medium-image.log | awk -F ': ' '{medium+=$2} END {print "vulnerability_count_medium="medium}' >> "$GITHUB_OUTPUT"
        grep -Eo 'UNKNOWN: [0-9]+' low-medium-image.log | awk -F ': ' '{unknown+=$2} END {print "vulnerability_count_unknown="unknown}' >> "$GITHUB_OUTPUT"
        if [[ -f .trivyignore ]]; then
            echo "vulnerability_count_ignored=$(grep -c '^\s*CVE' .trivyignore)" >> "$GITHUB_OUTPUT"
        else
            echo "vulnerability_count_ignored=0" >> "$GITHUB_OUTPUT"
        fi

